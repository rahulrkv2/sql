####1)

BEGIN
 FOR I IN (SELECT * FROM STUDENTS) LOOP
	EXIT WHEN SQL%NOTFOUND;
	DBMS_OUTPUT.PUT_LINE(I.id || '  ' || I.NAME || '  ' || I.email || '  ' || I.phoneno ||'  ' || I.dob ||'  ' || I.height_in_cm ||'  ' || I.deptno ||'  ' || I.stipend);
 END LOOP;
END;
/




####2)

DECLARE
ID STUDENTS.ID%TYPE;
NA STUDENTS.NAME%TYPE;
EM STUDENTS.EMAIL%TYPE;
PH STUDENTS.PHONENO%TYPE;
DOB STUDENTS.DOB%TYPE;
HIC STUDENTS.HEIGHT_IN_CM%TYPE;
DNO STUDENTS.DEPTNO%TYPE;
STI STUDENTS.STIPEND%TYPE;
STIP STUDENTS.UPDATED_STIPEND%TYPE;

CURSOR C IS
SELECT *
FROM STUDENTS;

BEGIN
 OPEN C;
 LOOP                                         
    FETCH C INTO ID,NA,EM,PH,DOB,HIC,DNO,STI,STIP;
    EXIT WHEN C%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(ID || '  ' || NA || '  ' || EM || '  ' || PH ||'  ' || DOB ||'  ' || HIC ||'  ' || DNO ||'  ' || STI ||'  ' || STIP);
 END LOOP;
 CLOSE C;
END;
/


####3)

  DECLARE
      NA STUDENTS.NAME%TYPE;
      STI STUDENTS.STIPEND%TYPE;
      CURSOR C  IS
      SELECT NAME,STIPEND FROM STUDENTS WHERE STIPEND < 12000;
  BEGIN
      OPEN C;
      LOOP
          FETCH C INTO NA,STI;
          EXIT WHEN C%NOTFOUND;
          DBMS_OUTPUT.PUT_LINE('Name = ' || NA || ', Salary = ' || STI);
      END LOOP;
      CLOSE C;
  END;
/


###4)

CREATE TABLE ACCMASTER
(Accno INT, Name VARCHAR2(30), Balance number);

CREATE TABLE ACCTRAN
(Accno INT, TDate DATE, Deb_cred varchar2(10), Amount number, Processed varchar2(10));

INSERT INTO ACCMASTER VALUES (1,'RAH',55000);
INSERT INTO ACCMASTER VALUES (2,'NPF',56000);
INSERT INTO ACCMASTER VALUES (3,'NMJ',87000);
INSERT INTO ACCMASTER VALUES (4,'NKB',58000);

INSERT INTO ACCTRAN VALUES (1,'3-MAR-13','D',9000,'Y');
INSERT INTO ACCTRAN VALUES (1,'4-MAR-13','C',6000,'N');
INSERT INTO ACCTRAN VALUES (2,'5-APR-13','D',8000,'N');
INSERT INTO ACCTRAN VALUES (4,'6-APR-13','C',3000,'Y');
INSERT INTO ACCTRAN VALUES (3,'2-MAY-13','C',5000,'Y');

DECLARE
 T ACCTRAN%ROWTYPE;
CURSOR T_CUR IS
SELECT * FROM ACCTRAN WHERE PROCESSED='N';

M ACCMASTER%ROWTYPE;
CURSOR M_CUR IS
SELECT * FROM ACCMASTER;


BEGIN
 OPEN T_CUR;
OPEN M_CUR;
 LOOP
  FETCH T_CUR INTO T;
  FETCH M_CUR INTO M;
  EXIT WHEN T_CUR%NOTFOUND;
  IF  T.ACCNO=M.ACCNO AND T.DEB_CRED='D' THEN
		M.BALANCE:=M.BALANCE-T.AMOUNT;
  ELSIF T.ACCNO=M.ACCNO AND T.DEB_CRED='C' THEN
		M.BALANCE:=M.BALANCE+T.AMOUNT;
  END IF;
UPDATE ACCMASTER
SET BALANCE=M.BALANCE WHERE ACCNO=M.ACCNO;
 

END LOOP;

CLOSE T_CUR;
CLOSE M_CUR;
END;
/




####5)

CREATE TABLE EMPS ( ENAME VARCHAR2(6),EMPNO NUMBER(5), SALARY NUMBER(5), DEPTNO NUMBER(5), PRIMARY KEY(EMPNO));
INSERT INTO EMPS VALUES ('NKB',01,40000,01);
INSERT INTO EMPS VALUES ('NMJ',02,30000,02);
INSERT INTO EMPS VALUES ('NPF',03,50000,01);

CREATE TABLE EMPRAISE ( EMPNO VARCHAR2(6), RAISE_DATE DATE, RAISE_AMT NUMBER);

DECLARE
 E_DATE DATE;
 DEPT NUMBER:=&DEPT;
 E_SA NUMBER;
 E_RECORD EMPS%ROWTYPE;

CURSOR E_EMP IS
(SELECT * FROM EMPS WHERE DEPTNO=DEPT);

BEGIN
 SELECT SYSDATE INTO E_DATE FROM DUAL;
 OPEN E_EMP;
 LOOP
  FETCH E_EMP INTO E_RECORD;
  EXIT WHEN E_EMP%NOTFOUND;
  E_SA:=E_RECORD.SALARY*0.005;
  E_RECORD.SALARY:=E_SA+E_RECORD.SALARY;
  INSERT INTO EMPRAISE VALUES (E_RECORD.EMPNO, E_DATE, E_SA);
  UPDATE EMPS
  SET SALARY =E_RECORD.SALARY
  WHERE EMPNO=E_RECORD.EMPNO;
END LOOP;
CLOSE E_EMP;
END;
/